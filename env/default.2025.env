# --------------------------------------------------------------------------
# Tries to identify the SYSTEMNAME and loads the respective environment.
#
# Normally sourced from the main ../build_tsmp2.sh script.
# --------------------------------------------------------------------------

# TODO: Deducing which environment file maps to a machine relies on
#       partial string match, which makes surgically-precise SYSTEMNAME
#       introspection unnecessary. A substring match allows for simple
#       and robust solution, e.g. `MACHINE=$(hostname)` already works 99%
#       of the time (other 1% comes from intentionally obfuscated hostnames)
#
#       HPC admins know best so perhaps it's better to let them handle
#       SYSTEMNAME setting on their respective environment file. Saving the
#       machine name to a dummy variable is sufficient.
#
# Set SYSTEMNAME if not yet set
if [ -z "${SYSTEMNAME}" ]; then
   if [ $(command -v sinfo) ]; then
      export SYSTEMNAME=$(scontrol show config | grep ClusterName | awk -F= '{ print $2 }' | xargs)
   else
      export SYSTEMNAME=$(hostname | awk -F. '{ for(i=1;i<=NF;i++) if(!match($i, /[0-9]$/)) { print $i; break }; if(i==NF+1) { print $1 } }')
   fi
fi

# Map machine to environment file by detecting a
# unique signature from the machine name.
known_machine="true"
if [[ $SYSTEMNAME == *"jedi"* || $SYSTEMNAME == *"jupiter"* ]]; then
  ENV_FILE=jsc.2025.gnu.openmpi
  DEFAULT_COMPILER="gnu"
elif [[ $SYSTEMNAME == *"jureca"* || $SYSTEMNAME == *"juwels"* || $SYSTEMNAME == *"jusuf"* ]]; then
  ENV_FILE=jsc.2025.intel.psmpi
  DEFAULT_COMPILER="intel"
elif [[ $SYSTEMNAME == *"marvin"* ]]; then
  ENV_FILE=uni-bonn.gnu.openmpi
  DEFAULT_COMPILER="gnu"
elif [[ $SYSTEMNAME == *"UBUNTU"* ]]; then
  ENV_FILE=ubuntu.gnu.openmpi
  DEFAULT_COMPILER="gnu"
else
  echo "ERROR: Unknown default environment for machine '$(hostname)'"
  known_machine="false"
fi

if [[ ${known_machine} != "false" ]]; then
  TSMP2_ROOT=$(git rev-parse --show-toplevel)
  echo "Sourcing default environment file "${ENV_FILE}" for ${SYSTEMNAME^^} ... "
  if [[ "$1" == "--parflowgpu" ]]; then
    source ${TSMP2_ROOT}/env/${ENV_FILE} --parflowgpu
  else
    source ${TSMP2_ROOT}/env/${ENV_FILE}
  fi
fi
